{"ast":null,"code":"var _jsxFileName = \"D:\\\\swiftrut\\\\Event Managment\\\\event-managment-app\\\\src\\\\page\\\\HomePage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardMedia, Typography, Button, Grid, Container } from '@mui/material';\n// Assuming EventList is an array of event objects\nimport { EventList } from '../component/Event/EventList';\n\n// Custom styles using sx prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  root: {\n    padding: 4,\n    backgroundColor: '#f5f5f5'\n  },\n  card: {\n    maxWidth: 345,\n    margin: 2\n  },\n  media: {\n    height: 140\n  },\n  button: {\n    marginTop: 2\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  }\n};\nconst HomePage = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justifyContent: \"center\",\n      children: EventList.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          sx: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            sx: styles.media,\n            image: event.image // Use event.image URL here\n            ,\n            title: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: styles.button,\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-event\",\n        style: styles.link,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Create New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","Link","Card","CardContent","CardMedia","Typography","Button","Grid","Container","EventList","jsxDEV","_jsxDEV","styles","root","padding","backgroundColor","card","maxWidth","margin","media","height","button","marginTop","link","textDecoration","color","HomePage","sx","children","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","map","event","item","xs","sm","md","image","title","description","fullWidth","id","style","textAlign","to","_c","$RefreshReg$"],"sources":["D:/swiftrut/Event Managment/event-managment-app/src/page/HomePage.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardContent, CardMedia, Typography, Button, Grid, Container } from '@mui/material';\r\n// Assuming EventList is an array of event objects\r\nimport { EventList } from '../component/Event/EventList'; \r\n\r\n// Custom styles using sx prop\r\nconst styles = {\r\n  root: {\r\n    padding: 4,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: 2,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  button: {\r\n    marginTop: 2,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n  },\r\n};\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Container sx={styles.root}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n        Upcoming Events\r\n      </Typography>\r\n      \r\n      <Grid container spacing={4} justifyContent=\"center\">\r\n        {EventList.map((event) => (\r\n          <Grid item xs={12} sm={6} md={4} key={event.id}> {/* Ensure each event has a unique id */}\r\n            <Card sx={styles.card}>\r\n              <CardMedia\r\n                sx={styles.media}\r\n                image={event.image} // Use event.image URL here\r\n                title={event.title}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  {event.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {event.description}\r\n                </Typography>\r\n              </CardContent>\r\n              <Button sx={styles.button} variant=\"contained\" color=\"primary\" fullWidth>\r\n                View Details\r\n              </Button>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <Link to=\"/create-event\" style={styles.link}>\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            Create New Event\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}